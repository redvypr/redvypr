- 0.9.13:
       - TablePlotDevice added
       - datafilter improved
- 0.9.12:
       - cleanup of address widgets
       - datafilter device and necessary changes
- 0.9.11:
       - moved to PyQt6
- 0.9.10:
       - several small feature in XYPlotWidget
       - bug fixes calibration to work again
- 0.9.9:
       - cleanup of pydanticConfigWidget and implementation of "NoneType" and "Optional"
       - improved generic sensor to allow entries to packetid from rawdatapacket
- 0.9.8:
        - added figlet and asciiart
- 0.9.7:
        - fixes in xlsxwriter
        - fixes in csvwriter
        - improved datastreamsWidget
        - bug in distribute_data (re-arranged for loops)
        - added clear_datainqueue_before_start flag in device base config
- 0.9.6:
        - bug in generic_sensor
        - removed debug print statements
- 0.9.5:
        - redvypr_device_scan option added to redvypr and gui widgets allowing to fine tune available devices
        - cleanup of debugging statements
- 0.9.4:
        - Implemented explicit_format and address_str_explicit to RedvyprAddress()
        - Improved requirements
- 0.9.3:
        - removed utils and utils/csv2dict
- 0.9.2:
        - implemented expansion level in redvypr_addressWidget
        - first draft of PcolorPlot
        - Added new empty string feature in RedvyprAddress('/k:'). Empty string means that the entry is explicitly not checked.
        - Added get_expand_explicit_str for RedvyprAddress
        - added distribute_data_replyqueue, that allows to send datapackets to the distribute thread and wait for the answer. Used to update statistics in a centralized way with set_metadata
        - improved datakey comparison
        - metadata design changed
        - Added infrastructure to send command packets to all devices. All devices are subscribed now to '/d:/p:/i:metadata/k:_redvypr_command'
        - Added '==' to redvypr addresses for direct comparison (ignoring *)
- 0.9.1:
        - less verbose
        - RedvyprAddress is not expanding missing address entries with a '*'
        - implemented ``__setitem__`` of Datapacket object
        - 'all' datakey bug in network_device when config is loaded
        - generic_sensor calibration
        - RedvyprAddress accepts string and treats it as datakey entry: RedvyprAddress('hello') is equal to RedvyprAddress('/k:hello')
        - Datapacket.address implemented, datapacket has now also its redvypr address
        - RedvyprAddress is hashable, i.e. can be used as dictionary entries
        - manual_input device added
        - Datapacket accepts datapacket is input
        - generic_sensor update
        - redvypr.get_packetids() and RedvyprDevice.get_packetids() implemented
        - several bug fixes in redvypr_addressWidget.py, it accepts now packetid and can treat several items using regular expressions.
        - __configType == 'configRedvyprAddress' data type changed to RedvyprAddress instead of str
- 0.9.0:
        - autostart bug
        - autocalibration in calibration device
        - initdevicewidget parameter bug fixed
- 0.8.9:
        - renamed ``devicedisplaywidget.update`` in ``.update_data``
        - redvypr: devicedict cleaned, removed 'dataout', refactored 'gui' and 'guiqueue' into 'guiqueues'
- 0.8.8:
        - datastreamsWidget implemented
        - bugs in RedvyprAddress with packetid defined or an update of datakey
        - added polynomial fit to calibration.py and improved several small things
        - improved ``Device.get_metadata_datakey``, it can now handle "eval" RedvyprAddresses
        - cleanup of XYPlotWidget
- 0.8.7:
        - introduced packetid in datapackets
        - Datapackets work now with ``Datapacket[RedvyprAddress]``
        - bug fixes in serial device
- 0.8.6:
        - generic_sensor and sensor definitions strongly improved
        - RedvyprAddress is working as a pydantic datatype
- 0.8.5:
        - bug fixes in serial
- 0.8.4:
        - serial widget improved
        - generic_sensor added
        - configwidget strongly improved
        - small bugs with device paths fixed
- 0.8.3:
        - XYPlot working
        - configwidget editable bug removed
        - XYPlot with feature of plot last_N_points
        - redvypr device save config bug fixed (custom_config instead of config)
        - several small bugs
- 0.8.2:
        - qtawesome icons for the devices including configuration
- 0.8.1:
        - API renaming, changed class names to CapWord style according to PEP08, cleanup of configuration
- 0.8.0:
        - complete rewrite of configuration for a fill pydantic version
- 0.7.9:
        - complete split of redvypr, redvypr_widget and redvypr_main
- 0.7.8:
        - configuration cleanup, start of cleaner gui, windows can now be hidden/docked to tab or floating by themselfs
- 0.7.7:
        - datapacket object that allows datakey expansion, enables xlsxlogger to write "flattened" out list/arrays
- 0.7.6:
        - datadistribution thread is restarted when it crashes.
- 0.7.5:
        - calibration and csvsensors added
- 0.7.4:
        - xlsxlogger working, nmeaparser re-implemented, working but needs to be polished
- 0.7.3:
        - major csvlogger rework, xlsxlogger draft implemented
- 0.7.2:
        - Cleanup of several API calls, command line interface improved, XYplotWidget with pydantic added, redvypr_address with new address format added
- 0.7.1:
        - pydantic device_parameter, add_device, gui, loglevel
- 0.7.0:
        - Qthread instead of threading.Thread (allows to terminate a thread)
        - pydantic instead of redvypr.configure for configuration
- 0.6.9:
        - finalize_init is also tried to called for the displaywidget
        - redvypr_device.unsubscribe_all implemented
        - datastreamWidget somewhat nicer
- 0.6.8:
        - scan for redvypr modules updated, they need now a flag redvypr_devicemodule to be identified
        - line plot has a dt_update
        - added to datapackets ['_redvypr'][locpub] and ['_redvypr'][pub], the local publishing device and the publishing device
- 0.6.7:
        - improvements in plot_widgets (context menu, units in legend)
        - added redvypr_graph_widget.set_line(), redvypr_graph_widget.add_line()
        - cleaned up a lot of debugging information in several files
        - added redvypr.get_all_devicenames()
        - network_device updated to configuration dictionaries with template
        - config gui clean up
        - config gui is smarter regarding apply and remove
- 0.6.6:
        - rawdatareplay: replace_time flag
        - plot_widgets: clear buffer is now also clearing the line to plot
- 0.6.5:
        - repaired numpacket in distribute_data
        - rawdatareplay works now with indices
- 0.6.4:
        - rawdatareplay packetreader improved for potential thread based file inspection and user choice of packets to be read
        - added last publishing device (lpd) to ``treat_datatict()``. This allows to have the future feature of subscribing to a local publishing device
- 0.6.3:
        - major cleanup of config utilities and rawdatareplay
- 0.6.2:
        - changed regular expression from non-ascii ยง to {}
- 0.6.0:
        - added regular expressions into redvypr_address
        - command line arguments can now be more elaborate python data structure, that can be parsed by ast.literal_eval
- 0.5.4:
        - added ``multiprocessing.freeze_support()``, to have multiprocessing work with windows and pyinstaller
        - test_device has sine_rand datakey
- 0.5.3:
        - changed utils.py into configdata.py, added folder utils and utils/csv2dict
        - ``redvypr.rem_device()`` added and cleaned ``redvyprWidget.closeTab()``
        - distribute_data has now connection to main thread via redvypr.redvyprqueue to check for updates done by main thread
        - maximum device threshold added: ``config_template['redvypr_device']['max_devices'] = 1``
        - Added regular check if the distribute_data thread is still running, if not print a warning.
        - changed device.publish/subscribe flags to devices.publishes/subscribes
        - cleanup of api
        - complete rewrite of device scan with a device scan object ( redvypr_device_scan) instead of redvypr functions.
        - rawdatalogger offers gzip functionality
- 0.5.2:
        - subscriptions as a config key for devices added
        - improved configuration parsing
        - iored with a rep/req information exchange instead of multicast. Multicast optional for broadcasting presence.
- 0.5.1:
        - added tag in _redvypr data packet to prevent an infinite recirculation
        - plot much more usable
        - many improvements in iored
- 0.5.0:
        - redesigned distribute_data to check for subscriptions instead of dynamically connecting queues
        - rewrote devices such that they work with the new design
- 0.4.999:
        - removed config folder
        - created example folder with configuration, needs to be cleaned
        - config module to harmonize configuration
        - added Internet of Redvypr (iored) device
        - introduction of configuration class for device configuration
        - "s" for autostart and "p" or process in the -a option. Standard case is starting a device as a thread.
- 0.4.10:
        - rawdatalogger improved
- 0.4.9:
        - autostart option in yaml config moved to deviceconfig
- 0.4.8:
        - autostart option in the devices widget to have the device started automatically with a saved configuration
        - loglevel/name moved from 'config' to a deviceconfig dictionary entry
- 0.4.7:
        - nogui works again
        - template configuration is merged with user configuration in add_device
        - network_device updated with new API
- 0.4.6:
        - configuration now with template dictionaries possible, device can consits only of template and start function, redvypr will use standard device and gui objects
        - cleanup of old interface (adding attributes to devices while initialization)
        - added process kill option
        - configuration can be saved now
- 0.4.5:
        - Redesign of API, redvypr_device object as standard Device
        - Configuration of devices not longer as attributes but directly as a argument to __init__
- 0.4.4:
        - rawdatalogger, rawdatareplay, csvlogger (not usable yet)
- 0.4.3:
        - pyqtconsole added, plot gui nicer
        - Reworked the datastream/devicename string nomenclature
        - major updates in basic functions as  device_in_data, parse_devicestring
        - new functions in redvypr as: get_datastreams, get_datakeys, get_known_devices
        - added local flag in hostinfo
- 0.4.2:
        - calibration heavily updated, save config feature in redvypr
- 0.4.1:
        - get_datastream
- 0.4.0:
        - migrated to redvypr.net;github.com/redvypr/redvypr
        - Added GUI functionality to change the loglevel
        - network device cleanup
        - added ce_sensors datalogger
        - recursive device import
- 0.3.12:
        - new icon/logo v0.3.1, started calibration device
- 0.3.11:
        - netcdf tcp reconnection feature added, lets redvypr reconnect to a tcp host after the connection was closed
- 0.3.10:
        - textlogger bugfix
- 0.3.9:
        - Improved text logger with dt_filename (create new file every dt_filename seconds) and gui
- 0.3.8:
        - small changes for stability
- 0.3.7:
        - changed own nmea parser to pynmea2, improved nmea parsing stability, more nmea setup options
- 0.3.6:
        - created files.py and gui.py to standardize widgets and files
- 0.3.5:
        - list option in the packet data, works with netcdf, plot and randdata
- 0.3.4:
        - props option in the plotting routines available
- 0.3.3:
        - redvypr_devicelist_widget added and improved device/data selection in plot
- 0.3.2:
        - netCDF automatic group creation, massive device example added
- 0.3.1:
        - hostname command line, randdata counter, massive randdata example
- 0.3.0:
        - github.com upload
- 0.2.9:
        - Added statuswidget, changed path into extra widget that can be shown, can change hostname now
- 0.2.8:
        - Added first implementation of numeric display in plot
- 0.2.7:
        - Added view/info into the device widget, added first implementation of numeric display in plot
- 0.2.6:
        - Added statistics to inspect data (device.statistics), added view/info into the device widget
- 0.2.5:
        - Possible to add now devices from user defined pathes
- 0.2.4:
        - ``-p`` option in in the command line
- 0.2.3:
        - usability work on the gui (netcdf, gps, nmea_logbook)
- 0.2.2:
        - alot of work in the netcdflogger (qtreewidget to create an ncfile)
- 0.2.0:
        - GUI improvements (init, configuration)
- 0.1.9:
        - Several improvements in heatflow, netcdflogger, statusdisplay (standard status widget)
- 0.1.8:
        - separated redvypr main functionality from the gui widget
- 0.1.7:
        - Added deviceinfowidget, a sumarywdiget that allows to control all devices (remove, rename, connections)
- 0.1.6:
        - replaced nomencalture "sensor" with "device", to make it more general
- 0.1.5:
        - nogui option
- 0.1.4:
        - Rawdatadisp nicer
- 0.1.3:
        - Improved network device massively
- 0.1.2:
        - Added network_device
        - Added statusqueue, that allows threads/multiprocesses to send status messages to redvypr main task.
- 0.1.1:
        - Added autostart and datainqueue stop functionality to sensors.
        - Added another timer to update thread status of the devices ``self.sensorthreadtimer.timeout.connect(self.update_sensors_thread_status)``
        - self.sensorthreadtimer.start(500) does essentially for all sensors ``sensor.thread_status({'threadalive':running2})``
        - Added plot module based on pyqtgraph, configuration of the plotting module with yaml possible
- 0.1.0:
        - Configuration with a yaml file works on the basis of adding/connecting/starting devices
- 0.0.7:
        - redesigned add_sensor to be able to have a configuration file
- 0.0.6:
        - Added device connectivity, rawdatadisp and 'gui', 'guiqueue''
- 0.0.5:
        - Added functionality to have thread or multiprocessing functionality
- 0.0.4:
        - Renamed to redvypr
- 0.0.3:
        - Sensor objects better defined, random data sensor as an example works with a init and display widget as well as an start/stop button functionality
- 0.0.2:
        - Rudimentary device handling
